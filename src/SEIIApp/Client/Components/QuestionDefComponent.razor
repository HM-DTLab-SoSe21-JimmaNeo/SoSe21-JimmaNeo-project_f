<h3>Question</h3>
@{
    if (QuestionDto != null)
    {
    <EditForm Model="QuestionDto">
        <ObjectGraphDataAnnotationsValidator />
        <div class="input-group">

            <input type="text" style='width:100%' required @bind-value="QuestionDto.QuestionText" @bind-value:event="oninput">
            <span class="highlight"></span>
            <span class="bar"></span>
            <label class="hoverlabel">Question</label>
        </div>
        <p>
            <br /><b>Add pictures to the question!</b>

        </p>
        @foreach (var picture in QuestionDto.Pictures)
        {<hr />
            <PictureComponent PictureContentDTO="picture"></PictureComponent><br />
            <button class="btn btn-light btn-sm shadow" @onclick="() => RemovePicture(picture)">Remove Picture</button>
            <br />
        }
        <br />
        <button class="btn btn-light btn-sm my-3 shadow" @onclick="AddPicture">Add Picture</button>
        <br />

        @foreach (var answer in QuestionDto.Answers)
        {<hr />
            <AnswerDefComponent AnswerDto="answer"></AnswerDefComponent>
            <button class="btn btn-light btn-sm shadow" @onclick="() => RemoveAnswer(answer)">Remove Answer</button>
            <br />
        }
        <br />
        <button class="btn btn-light btn-sm shadow" @onclick="AddAnswer">Add Answer</button>
        <br />

        <div class="form-floating">
            <textarea class="form-control" id="inputMessage" type="text" placeholder="Enter explanation of question here..." style="height: 10rem" @bind="QuestionDto.Explanation"></textarea>
        </div>

    </EditForm>
    }
    else
    {
        <label>Loading Question Definition ...</label>
    }
}

@code {

    [Parameter]
    public QuestionDTO QuestionDto { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        InitQuestionDto();
    }

    private void InitQuestionDto()
    {
        if (QuestionDto.Answers == null)
            QuestionDto.Answers = new List<AnswerDTO>();
        if (QuestionDto.Pictures == null)
            QuestionDto.Pictures = new List<PictureContentDTO>();
    }

    private void AddAnswer()
    {
        QuestionDto.Answers.Add(new AnswerDTO());
    }

    private void RemoveAnswer(AnswerDTO answer)
    {
        QuestionDto.Answers.Remove(answer);
    }

    private void AddPicture()
    {
        QuestionDto.Pictures.Add(new PictureContentDTO());
    }

    private void RemovePicture(PictureContentDTO pictureContentDto)
    {
        QuestionDto.Pictures.Remove(pictureContentDto);
    }

}


