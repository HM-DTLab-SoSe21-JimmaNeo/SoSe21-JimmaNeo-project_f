@using SEIIApp.Shared;
@inject IJSRuntime _jsRuntime

        <h3>Upload pictures<br />(PNG Format)</h3><br />


    <EditForm Model="PictureContentDTO">
        <DataAnnotationsValidator />
        <div class="row">
            <div class="col-lg-4 col-md-6 col-sm-8">
                <img src="@PictureContentDTO.Path" class="img-thumbnail"> <br /> <br />
                <InputFile OnChange="@OnInputFileChanged" style="margin-bottom: 1rem;" class="btn btn-outline-primary"></InputFile>
            </div>
            
        </div>
        <div>
                <label>Description:</label>        
                <InputText @bind-Value="PictureContentDTO.Description" />
         </div>

        <ValidationSummary />
    </EditForm>


    @code {
        [Parameter]
        public PictureContentDTO PictureContentDTO { get; set; }

        protected override void OnInitialized()
        {
            base.OnInitialized();
        }

        private async Task OnInputFileChanged(InputFileChangeEventArgs inputFileChangeEvent)
        {
            var file = inputFileChangeEvent.File;
            var buffer = new byte[file.Size];
            await file.OpenReadStream(1512000).ReadAsync(buffer);
            PictureContentDTO.Path = $"data:image/png;base64,{Convert.ToBase64String(buffer)}";
        }

        private async Task DownloadProfilePicture()
        {
            string[] base64String = PictureContentDTO.Path.Split(',');
            var module = await _jsRuntime.InvokeAsync<IJSObjectReference>("import", "./js/site.js");
            await module.InvokeVoidAsync("downloadFile", "image/png", base64String[1], "profile.png");
        }
    }
