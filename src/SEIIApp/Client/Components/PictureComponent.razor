@if (OnEditing)
{
    <h3>Pictures<br />(PNG Format)</h3><br />
    <EditForm Model="PictureContentDTO">
        <DataAnnotationsValidator />
        <div class="row">
            <div class="col-lg-4 col-md-6 col-sm-8 text-center">
                <img src="@PictureContentDTO.Path" class="img-thumbnail"> <br /> <br />
                <InputFile OnChange="@OnInputFileChanged" style="margin-bottom: 1rem;" class="btn btn-outline-dark">
                </InputFile>
            </div>

        </div>
        <div class="form-floating">
            <textarea class="form-control" id="inputMessage" type="text" placeholder="Enter description here..." style="height: 10rem" @bind="PictureContentDTO.Description"></textarea>
        </div>


        <ValidationSummary />
    </EditForm>

}
else
{
    <img src="@PictureContentDTO.Path" class=" img-thumbnail" allowfullscreen> <br />
    <label>@(PictureContentDTO.Description)</label><br />
}
@code {
    [Parameter]
    public PictureContentDTO PictureContentDTO { get; set; }

    public static bool OnEditing = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private async Task OnInputFileChanged(InputFileChangeEventArgs inputFileChangeEvent)
    {
        var file = inputFileChangeEvent.File;
        var buffer = new byte[file.Size];
        await file.OpenReadStream(1512000).ReadAsync(buffer);
        PictureContentDTO.Path = $"data:image/png;base64,{Convert.ToBase64String(buffer)}";
    }


}
