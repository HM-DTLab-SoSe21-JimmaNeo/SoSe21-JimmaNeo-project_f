@inject UserRefreshService UserRefresh
@implements IDisposable
@inject UserLoggedInService MyUserService
@inject NavigationManager NavigationManager




<div class="top-row pl-4 navbar navbar-dark">
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
    <a class="navbar-brand" href="">
        JimmaNeo
        <img src="/Images/logo_46px.png" alt="JN" class="logo-image" />
    </a>


</div>



<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>

        <li class="nav-item px-3">
            <NavLink class="nav-link" href="news">
                <span class="oi oi-globe" aria-hidden="true"></span> News
            </NavLink>
        </li>



        @if (MyUserService.User != null)
        {

            <li class="nav-item px-3">
                <NavLink class="nav-link" @onclick="() => Logout()" Match="NavLinkMatch.All">
                    <span class="oi oi-lock-unlocked" aria-hidden="true"></span> Logout
                </NavLink>
            </li>

            @switch ((int)MyUserService.User.Role)
            {


                case 1: // student
                    {
                        <li class="nav-item px-3">
                            
                                @if (expandSubMenu)
                                {
                                    <NavLink class="nav-link" href="welcomestudent" @onclick="()=>expandSubMenu= !expandSubMenu">
                                        <span class="oi oi-minus" aria-hidden="true"></span> Student Area
                                    </NavLink>

                                }
                                else
                                {
                                    <NavLink class="nav-link" href="welcomestudent" @onclick="()=>expandSubMenu= !expandSubMenu">
                                        <span class="oi oi-plus" aria-hidden="true"></span>Student Area
                                        </NavLink>
                                        }

                                        @if (expandSubMenu)
                                        {
                                            <ul class="flex-column">
                                                <li class="nav-item">
                                                    <NavLink class="expand-menu" href="/lectureoverview">
                                                        <span class="oi oi-book" aria-hidden="true"></span> Lectures
                                                    </NavLink>
                                                    <NavLink class="expand-menu" href="/testoverview">
                                                        <span class="oi oi-pencil" aria-hidden="true"></span> Tests
                                                    </NavLink>
                                                </li>
                                            </ul>

                                        }

</li>

                        break;

                    }
                case 2: // Trainer
                    {

    <li class="nav-item px-3">
        @if (expandSubMenu)
        {
            <NavLink class="nav-link" href="welcometrainer" @onclick="()=>expandSubMenu= !expandSubMenu">
                <span class="oi oi-minus" aria-hidden="true"></span> Trainer Area
            </NavLink>

        }
        else
        {
            <NavLink class="nav-link" href="welcometrainer" @onclick="()=>expandSubMenu= !expandSubMenu">
                <span class="oi oi-plus" aria-hidden="true"></span>Trainer Area
            </NavLink>
        }

        @if (expandSubMenu)
        {

            <ul class="flex-column">
                <li class="nav-item">
                    <NavLink class="expand-menu" href="/lectureoverview">
                        <span class="oi oi-book" aria-hidden="true"></span> Lectures
                    </NavLink>
                    <NavLink class="expand-menu" href="/testoverview">
                        <span class="oi oi-pencil" aria-hidden="true"></span> Tests
                    </NavLink>
                </li>
            </ul>


        }
    </li>

                        break;
                    }
                case 3: // Admin
                    {

                        <li class="nav-item px-3">
                            <NavLink class="nav-link" href="manageuser">
                                <span class="oi oi-list-rich" aria-hidden="true"></span> ManageUser
                            </NavLink>


                        </li>
                        break;

                    }
            }

        }
        else
        {

            <li class="nav-item px-3">
                <NavLink class="nav-link" href="login" Match="NavLinkMatch.All">
                    <span class="oi oi-lock-locked" aria-hidden="true"></span> Login
                </NavLink>


            </li>

        }

        <li class="nav-item px-3">
            <NavLink class="nav-link" href="contact" Match="NavLinkMatch.All">
                <span class="oi oi-heart" aria-hidden="true"></span> Contact us
            </NavLink>
        </li>

        <li class="nav-item px-3">
            <NavLink class="nav-link" href="faq" Match="NavLinkMatch.All">
                <span class="oi oi-question-mark" aria-hidden="true"></span> FAQs
            </NavLink>
        </li>

    </ul>


</div>





@code {

    private bool collapseNavMenu = true;
    private bool expandSubMenu;


    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void Logout()
    {
        collapseNavMenu = !collapseNavMenu;
        MyUserService.User = null;
        UserRefresh.LoggedIn = false;
        NavigationManager.NavigateTo("/login");


    }
    protected override void OnInitialized()
    {
        UserRefresh.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        UserRefresh.OnChange -= StateHasChanged;
    }

}

