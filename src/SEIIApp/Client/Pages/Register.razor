@page "/register"
@inject Services.UserBackendAccessService UserService
@inject NavigationManager NavigationManager
@using SEIIApp.Shared;





<link rel="stylesheet" type="text/css" href="register.razor.css">



<h1 align="center">Join JimmaNeo!</h1>
<div class="registration-form">
    <form>
        <div class="form-img">
            <span>
                <i class="img img-user"></i>
                <img class="img1" src="/Images/benutzer.png" />
            </span>
        </div>
        <!--specific alerts-->
        @if (triggerAlert)
        {
            @switch ((int)status)
            {
                case 0:
                    <div class="alert-success">
                        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                        <strong>You have been successfully registered!</strong>
                    </div>
                    break;

                case 1:
                    <div class="alert">
                        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                        <strong>UserName not available!</strong>
                    </div>
                    break;

                case 2:
                    <div class="alert">
                        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                        <strong>Please insert your data in all fields.</strong>
                    </div>
                    break;
            }
        }
        <!--END specific alerts-->
        <!--RegisterInput-->
        <div class="form-group">
            <input type="text" class="form-control" id="fname" placeholder="First name" @bind="FirstName">
        </div>
        <div class="form-group">
            <input type="text" class="form-control" id="sname" placeholder="Last name" @bind="LastName">
        </div>
        <div class="form-group">
            <input type="text" class="form-control" id="uname" placeholder="Username" @bind="UserName">
        </div>
        <div class="form-group">
            <input type="password" class="form-control" id="p2" placeholder="Passwort" required @bind="Pw">
        </div>
        <div class="form-group">
            <button type="button" class="btn btn-block create-account" @onclick="ToRegister">Create</button>
        </div>
        <div class="form-group">
            <a href="login" type="button" class="btn btn-block cancle-account">Cancel</a>
        </div>
        <!--END RegisterInput-->
    </form>
</div>


@code {


    public string FirstName { get; set; }

    public string LastName { get; set; }

    public string UserName { get; set; }

    public string Pw { get; set; }

    private bool triggerAlert = false;

    private Status status { get; set; }

    /// <summary>
    /// Enum for specific alerts.
    /// </summary>
    private enum Status
    {
        success,
        fail,
        notCompletely,

    }

    /// <summary>
    /// Creates a new user after registration.
    /// </summary>
    private async Task ToRegister()
    {
        triggerAlert = true;
        UserDTO user = new UserDTO() { FirstName = this.FirstName, LastName = this.LastName, Name = this.UserName, Role = Role.Student };
        LoginInformationDTO logInfo = new LoginInformationDTO() { User = user, Pw = Pw };


        if (CheckRegister())
        {

            var response = await UserService.RegisterUser(logInfo);
            if (response == null)
            {
                status = Status.fail;
                StateHasChanged();
                await Task.Delay(4000);
                triggerAlert = false;
            }
            else
            {
                status = Status.success;
                StateHasChanged();
                await Task.Delay(4000);
                NavigationManager.NavigateTo("/login");
            }

        }
        else
        {
            status = Status.notCompletely;
            StateHasChanged();
            await Task.Delay(4000);
            triggerAlert = false;
        }


    }


    /// <summary>
    /// Check for correct user input.
    /// </summary>
    private bool CheckRegister()
    {
        bool check = true;
        if (FirstName == null || LastName == null || UserName == null || Pw == null)
        {
            check = false;
        }

        return check;

    }

    public void Redirect(string url) { }

}

