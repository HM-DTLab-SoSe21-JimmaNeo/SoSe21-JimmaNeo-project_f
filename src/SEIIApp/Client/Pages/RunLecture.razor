@page "/runlecture/{LectureID:int}"

@inject Services.LectureBackendAccessService LectureService
@inject NavigationManager NavigationManager


<div class="container">

    @if (LectureDto != null)
    {
        VideoComponent.OnEditing = false;
        PictureComponent.OnEditing = false;
        <h2 class="text-center">@(LectureDto.Topic)</h2><hr />
        <ul class="list-group list-group-flush">

            <h4>Videos</h4>

           <EditForm Model="@LectureDto"> 
                <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                    <button class="btn btn-primary me-md-2" type="button" @onclick="()=> GetToTest()">Test</button>
                </div>
                @foreach (var video in LectureDto.Videos)
                {
                    <div class="card">
                        <div class="card-body">


                            <VideoComponent VideoContentDTO="video"></VideoComponent>
                            <p>Video Description</p>
                            <p>@video.Description</p>
                        </div>
                    </div>
                }

        
        <h4> Pictures</h4>
        @foreach (var picture in LectureDto.Content)
        {
            <div class="card">
                <div class="card-body">
                    <li class="text-center list-group-item">
                        <PictureComponent PictureContentDTO="picture"></PictureComponent>
                        <p>@picture.Description</p>
                    </li>


                </div>
            </div>
        } <li class="list-group list-group-flush">
            <label> Lecture Text</label>
            <p>@LectureDto.Text</p>
            
            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                <div class="w-100">
                    <button class="btn btn-secondary" type="button" @onclick="()=> GetLastLecture()">Back</button>

                    <button class="btn btn-primary float-right" type="button" @onclick="()=> GetNextLecture()">Next</button>
                    </div>
                </div>
        </li>

        </EditForm>
</ul>
    }



</div>


@code {

    [Parameter]
    public int LectureID { get; set; }

    public static LectureDTO LectureDto { get; set; }

    private bool isClicked { get; set; }


    protected override async Task OnParametersSetAsync()
    {

        var returnedLecture = await LectureService.GetLectureById(LectureID);
        await base.OnParametersSetAsync();
        LectureDto = returnedLecture;
        SEIIApp.Client.Components.VideoComponent.OnEditing = false;
    }

    private async void OnSubmitLecture()
    {

        var answer = await LectureService.AddOrUpdateLecture(LectureDto);
        if (answer != null)
        {
            NavigationManager.NavigateTo("/resultslecture/");
        }

    }

    private void GetNextLecture()
    {
       
            NavigationManager.NavigateTo($"/runlecture/{LectureID + 1}");
       
    }

    private bool HasNextLecture()
    {
        bool hasNext= false;


        return hasNext;
    }

    private void GetLastLecture()
    {
        if(LectureID>=2)
            NavigationManager.NavigateTo($"/runlecture/{LectureID -1}");
    }

    private void GetToTest()
    {
        NavigationManager.NavigateTo($"/runtest/{LectureDto.Test.TestID}");
    }
}

