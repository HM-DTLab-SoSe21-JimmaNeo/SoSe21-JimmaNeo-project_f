@page "/welcometrainer"

@inject NavigationManager NavigationManager
@inject UserLoggedInService MyUserService
@inject Services.CompletedTestBackendAccessService CompletedTestService
@inject Services.TestCompareService CompareService

@using SEIIApp.Shared;

<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x" crossorigin="anonymous">
</head>

@{
    @if (MyUserService.User != null && MyUserService.User.Role == Role.Trainer)
    {
        <body>
            <div class="container">
                <h1 align="center">Welcome @MyUserService.User.FirstName @MyUserService.User.LastName!</h1>
                <hr class=" divider" />
                <div class="card">
                    @*<div class="card-header">*@
                    @*</div>*@
                    <div class="card-body">
                        <h5 class="card-title" align="center"> Below you can see the results of the exams</h5>
                        @if (SortedTests != null && SortedTests.Count > 0)
                        {
                            <table class="table table-success table-hover table-bordered table-sm table-responsive-sm">
                                <thead>
                                    <tr>
                                        <th scope="col">TestId</th>
                                        <th scope="col">Topic</th>
                                        <th scope="col">Date</th>
                                        <th scope="col">Average points(%)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var test in SortedTests)
                                    {
                                        <tr>
                                            <td>@test.TestID</td>
                                            <td>@test.Topic</td>
                                            <td>@test.DateOfCreation</td>
                                            <td>@(Results[SortedTests.IndexOf(test)])</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <p>Either you have not yet created a test or no test you created was solved</p>
                        }
                        <div class="card-group">
                            <div class="card border-success">
                                <img src="/Images/WelcomeTrainer/lectures.jpeg" class="card-img-top" alt="...">
                                <div class="card-body">
                                    <h5 class="card-title">How to lectures</h5>
                                    <p class="card-text">This video explains how to create and start lectures</p>
                                </div>
                                <div class="card-footer">
                                    <a href="https://youtube.com" class="btn btn-outline-success">Check it out</a>
                                </div>
                            </div>
                            <div class="card border-success">
                                <img src="/Images/WelcomeTrainer/tests.webp" class="card-img-top">
                                <div class="card-body">
                                    <h5 class="card-title">How to tests</h5>
                                    <p class="card-text">This video explains how to create and start tests</p>
                                </div>
                                <div class="card-footer">
                                    <a href="https://youtube.com" class="btn btn-outline-success">Check it out</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </body>
    }
    else
    {
        <div class="card">
            <div class="card-header">
                <h1 align="center">You are not allowed to see this!</h1>
            </div>
            <div class="text-center">
                <a href="/" class="btn btn-outline-primary" role="button">Back to homepage</a>
            </div>
        </div>
    }
}







@code {
    private CompletedTestDTO[] CompletedTests { get; set; }

    private List<TestBaseDTO> SortedTests { get; set; }

    private double[] Results { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (MyUserService.User != null && MyUserService.User.Role == Role.Trainer)
        {
            await base.OnParametersSetAsync();

            var result = await CompletedTestService.GetCompletedTestsWithAuthotId(MyUserService.User.UserId);

            if (result != null && result.Length > 0)
            {
                CompletedTests = result;
                CalculateResults();
            }
        }
    }

    private void CalculateResults()
    {
        SortedTests = SortTests();
        Results = new double[SortedTests.Count];
        int index = 0;

        foreach (var test in SortedTests)
        {
            var solvedTests = CompletedTests.Where(solved => solved.SolvedTest.TestID == test.TestID);
            double reachedPoints = 0, maxPoints = 0;
            foreach (var solved in solvedTests)
            {
                reachedPoints += solved.ReachedPoints;
                maxPoints += solved.MaxPoints;
            }
            Results[index] = Math.Round((reachedPoints / maxPoints) * 100, 2);
            index++;
        }
    }

    private List<TestBaseDTO> SortTests()
    {
        List<TestBaseDTO> Result = new();
        HashSet<TestBaseDTO> Distinct = new HashSet<TestBaseDTO>(CompareService);

        foreach (var test in CompletedTests)
        {
            if (Distinct.Add(test.SolvedTest))
            {
                Result.Add(test.SolvedTest);
            }
        }
        return Result;
    }
}
