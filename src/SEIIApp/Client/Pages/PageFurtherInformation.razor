@page "/furtherinformation/{TestID:int}"

@inject Services.TestsDefinitionBackendAccessService TestDefinitionService
@inject NavigationManager NavigationManager




<div class="container">

    @if (TestDto != null)
    {
        <h2 class="text-center">Further information about @(TestDto.Topic)</h2><hr class="divider" />
    <ul class="list-group list-group-flush">
    @if (TestDto.FurtherLinks.Any())
    {
        
        <h4 class="text-center"><b>Website-Links about @(TestDto.Topic)</b></h4>
        @foreach (var link in TestDto.FurtherLinks)
        {
    <li class="text-center list-group-item">
        <div class="card">
            <div class="card-body">
                <label>@(link.Description)</label><br />
                <label>@(link.Link)</label><br />
                <form action="@link.Link">
                    <input type="submit" value="Go to Link" />
                </form>
            </div>
        </div>
    </li>
        }
    }
    @if (TestDto.VideosFurtherInformation.Any())
    {
        <h4 class="text-center"><b>Videos about @(TestDto.Topic) </b></h4>
        @foreach (var video in TestDto.VideosFurtherInformation)
        {
    <li class="text-center list-group-item">
        <div class="card">
            <div class="card-body">
                <VideoComponent VideoContentDTO="video"></VideoComponent>
            </div>
        </div>
    </li>
        }
    }
    @if (TestDto.Content.Any())
    {
        <h4 class="text-center"><b>Pictures about @(TestDto.Topic) </b></h4>
        @foreach (var picture in TestDto.Content)
        {
    <li class="text-center list-group-item">
        <div class="card">
            <div class="card-body">
                <PictureComponent PictureContentDTO="picture"></PictureComponent>
            </div>
        </div>
    </li>
        }

    }
</ul>

        <div class="text-center py-2">
            <button class="btn btn-light" @onclick="() => ReturnBackToTestOverview()">Return to overview</button>
        </div>
    }

</div>

@code{

    [Parameter]
    public int TestID { get; set; }

    public TestDTO TestDto { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        var existingQuiz = await TestDefinitionService.GetTestById(TestID);
        await base.OnParametersSetAsync();
        this.TestDto = existingQuiz;
        SEIIApp.Client.Components.VideoComponent.OnEditing = false;
        SEIIApp.Client.Components.PictureComponent.OnEditing = false;
    }

    private void ReturnBackToTestOverview()
    {
        NavigationManager.NavigateTo("/testoverview/");
    }
}

