@page "/furtherinformation/{TestID:int}"

@inject Services.TestsDefinitionBackendAccessService TestDefinitionService
@inject NavigationManager NavigationManager




<div class="container">

    @if (TestDto != null)
    {
        <h2 class="text-center">Further information about @(TestDto.Topic)</h2><hr /><ul class="list-group list-group-flush">
    @if (TestDto.FurtherLinks.Any())
    {
        
        <h4 >Links of websites about @(TestDto.Topic)</h4>
        @foreach (var link in TestDto.FurtherLinks)
        {
            <li class="text-center list-group-item">
                <label>@(link.Description)</label><br />
                <label>@(link.Link)</label><br />
                <form action="@link.Link">
                <input type="submit" value="Go to Link" />
                </form>
           </li>
        }
    }
    @if (TestDto.VideosFurtherInformation.Any())
    {
        <h4 class="text-center">Videos about @(TestDto.Topic) </h4>
        @foreach (var video in TestDto.VideosFurtherInformation)
        {
            <li class="text-center list-group-item">
                <label>@(video.Description)</label><br />
               <iframe width="560" height="315" src="@video.Path" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
            </li>
        }
    }
    @if (TestDto.Content.Any())
    {
        <h4 class="text-center">Pictures about @(TestDto.Topic) </h4>
        @foreach (var picture in TestDto.Content)
        {
            <li class="text-center list-group-item">
                <label>@(picture.Description)</label><br />
                <img width="560" height="315" src="@picture.Path" class="img-thumbnail" allowfullscreen> <br />
            </li>
        }

    }
</ul>

        <div class="text-center py-2">
            <button class="btn btn-outline-primary" @onclick="() => ReturnBackToTestOverview()">Return to overview</button>
        </div>
    }

</div>

@code{

    [Parameter]
    public int TestID { get; set; }

    public TestDTO TestDto { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        var existingQuiz = await TestDefinitionService.GetTestById(TestID);
        await base.OnParametersSetAsync();
        this.TestDto = existingQuiz;
    }

    private void ReturnBackToTestOverview()
    {
        NavigationManager.NavigateTo("/testoverview/");
    }
}

